<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       xmlns:context="http://www.springframework.org/schema/context">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/mysql.properties</value>
            </list>
        </property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--以下面开头的方法（对数据库数据修改操作）遇到异常需要回滚-->
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.hwangfantasy.service..*.*(..))"/>
        <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <!-- 数据库连接信息 -->
        <property name="driverClassName" value="${mysql.driverclass}"/>
        <property name="url" value="${mysql.jdbcurl}"/>
        <property name="username" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>

        <!-- 连接池信息 -->
        <property name="maxActive" value="${pool.maxActive}"/>
        <property name="initialSize" value="${pool.initialSize}"/>
        <property name="maxWait" value="${pool.maxWait}"/>
        <property name="minIdle" value="${pool.minIdle}"/>

        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
    </bean>
    <!-- 设置使用注解的类所在的包 -->
    <context:component-scan base-package="com.hwangfantasy">
    </context:component-scan>
    <!-- 开启注解扫描 -->
    <context:annotation-config/>
    <!--扫描mapper并且自动注入-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hwangfantasy.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--定义sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.hwangfantasy.bean"/>
        <property name="configLocation" value="classpath:config/myBatisContext.xml"/>
    </bean>

    <!--开启这个配置，spring才能识别@Scheduled注解   -->
    <task:annotation-driven scheduler="scheduler" mode="proxy"/>
    <task:scheduler id="scheduler" pool-size="10"/>

    <!--验证码生成器-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <!--是否有边框-->
                        <prop key="kaptcha.border">yes</prop>
                        <!--边框粗细度-->
                        <prop key="kaptcha.border.thickness">8</prop>
                        <!--边框颜色-->
                        <prop key="kaptcha.border.color">238,238,238</prop>
                        <!--验证码文本字符颜色-->
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <!--验证码噪点颜色-->
                        <prop key="kaptcha.noise.color">32,36,155</prop>
                        <!--验证码背景颜色渐进-->
                        <prop key="kaptcha.background.clear.from">white</prop>
                        <!--验证码背景颜色渐进-->
                        <prop key="kaptcha.background.clear.to">white</prop>
                        <!--验证码图片宽度-->
                        <prop key="kaptcha.image.width">115</prop>
                        <!--验证码图片高度-->
                        <prop key="kaptcha.image.height">40</prop>
                        <!--验证码图片高度-->
                        <prop key="kaptcha.textproducer.font.size">30</prop>
                        <!--<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>-->
                        <!--验证码文本字符内容范围-->
                        <prop key="kaptcha.textproducer.char.string">abcdehjkmnrtuvwx134678</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <!--验证码文本字符长度-->
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <!--验证码文本字符间距-->
                        <prop key="kaptcha.textproducer.char.space">7</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>
